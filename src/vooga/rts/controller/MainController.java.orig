package vooga.rts.controller;

import java.awt.Graphics2D;
import vooga.rts.gui.Window;

public class MainController extends AbstractController {

<<<<<<< HEAD


    private GameController myGameController;
    private LoadingController myLoadingController;
    private MenuController myMenuController;

    private Window myWindow; 

    private MainState myState;	

    private Timer myTimer;

    public MainController () {
        myState = MainState.Starting;

        myWindow = new Window();    	
        myGameController = new GameController();
        myLoadingController = new LoadingController();
        myMenuController = new MenuController();

        myState = MainState.Loading;
        myTimer = new Timer();
        myTimer.scheduleAtFixedRate(
                                    new TimerTask() {					
                                        @Override
                                        public void run() {
                                            update(this.scheduledExecutionTime());
                                            render();
                                        }
                                    }, 0, Game.TIME_PER_FRAME());
=======
	
	public GameController myGameController;
	public LoadingController myLoadingController;
	public MenuController myMenuController;
	
	private Window myWindow; 

	
    public MainController () {
    	myWindow = new Window();    	
        myGameController = new GameController();
        myLoadingController = new LoadingController();
        myMenuController = new MenuController();
        
>>>>>>> cfbfa963a7ee0e5786c2e94dcee90bf9a719aef1
        myWindow.setFullscreen(true);
    }

    @Override
    public void receiveUserInput () {
        // TODO Auto-generated method stub

    }

    @Override
    public void update (double elapsedTime) {
<<<<<<< HEAD
        switch (myState) {
            case Game:
                myGameController.update(elapsedTime);
                break;
            case Loading:
                break;
            case Menu:
                break;
            case Splash:
                break;
            case Starting:
                break;
            default:
                break;        
        }
    }

    public void render() {
        Graphics2D graphics = myWindow.getCanvas().getGraphics();
        paint(graphics);
        myWindow.getCanvas().render();
=======
        // TODO Auto-generated method stub
        
>>>>>>> cfbfa963a7ee0e5786c2e94dcee90bf9a719aef1
    }

    @Override
    public void paint (Graphics2D pen) {
<<<<<<< HEAD


    }

    public MainState getState() {
        return myState;
    }

    public void setState(MainState state) {
        this.myState = state;
    }

=======
        // TODO Auto-generated method stub
        
    }
    
>>>>>>> cfbfa963a7ee0e5786c2e94dcee90bf9a719aef1
}
